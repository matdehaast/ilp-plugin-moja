{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../test/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as sinon from 'sinon'\nimport {deserializeIlpPrepare, IlpFulfill, IlpPrepare, serializeIlpFulfill, serializeIlpPrepare} from 'ilp-packet'\nimport MojaHttpPlugin, {MessageType} from '../src'\n\n// Chai.use(chaiAsPromised)\nconst assert = require('assert')\nconst axios = require('axios')\n\ndescribe('Server', function () {\n\n  let httpPlugin: MojaHttpPlugin\n  let port = 3020\n  let host = '0.0.0.0'\n  let baseAddress = ''\n\n  // @ts-ignore\n  beforeEach(async function () {\n    httpPlugin = new MojaHttpPlugin({\n      ilpAddress: 'moja.superremit',\n      listener: {\n        port: port,\n        host: host,\n        baseAddress: baseAddress\n      },\n      server: {\n        endpoint: ''\n      },\n      endpoints: {\n        transfers: '',\n        quotes: ''\n      }\n    },{})\n    await httpPlugin.connect()\n  })\n\n  // @ts-ignore\n  afterEach(async function () {\n    await httpPlugin.disconnect()\n  })\n\n  describe('Transfer Requests', function () {\n    const transferRequest = {\n      transferId: 'b51ec534-ee48-4575-b6a9-ead2955b8069',\n      payerFsp: 'moja.za.blue.zar.green',\n      payeeFsp: 'moja.tz.red.tzs.pink',\n      amount: {\n        currency: 'USD',\n        amount: '123'\n      },\n      ilpPacket: 'AYIBgQAAAAAAAASwNGxldmVsb25lLmRmc3AxLm1lci45T2RTOF81MDdqUUZERmZlakgyOVc4bXFmNEpLMHlGTFGCAUBQU0svMS4wCk5vbmNlOiB1SXlweUYzY3pYSXBFdzVVc05TYWh3CkVuY3J5cHRpb246IG5vbmUKUGF5bWVudC1JZDogMTMyMzZhM2ItOGZhOC00MTYzLTg0NDctNGMzZWQzZGE5OGE3CgpDb250ZW50LUxlbmd0aDogMTM1CkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbgpTZW5kZXItSWRlbnRpZmllcjogOTI4MDYzOTEKCiJ7XCJmZWVcIjowLFwidHJhbnNmZXJDb2RlXCI6XCJpbnZvaWNlXCIsXCJkZWJpdE5hbWVcIjpcImFsaWNlIGNvb3BlclwiLFwiY3JlZGl0TmFtZVwiOlwibWVyIGNoYW50XCIsXCJkZWJpdElkZW50aWZpZXJcIjpcIjkyODA2MzkxXCJ9IgA',\n      condition: 'f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA',\n      expiration: '2016-05-24T08:38:08.699-04:00',\n      extensionList: {\n        extension: [\n          {\n            key: 'errorDescription',\n            value: 'This is a more detailed error description'\n          },\n          {\n            key: 'errorDescription',\n            value: 'This is a more detailed error description'\n          }\n        ]\n      }\n    }\n\n    const headers = {\n      'accept': 'application/json',\n      'content-type': 'application/json',\n      'content-length': 1820,\n      'date': 'Wed, 19 Nov 2018 08:14:01 GMT',\n      'fspiop-source': 'moja.za.blue.zar.green',\n      'fspiop-final-destination': 'moja.tz.red.tzs.pink'\n    }\n\n    describe('post /transfers', function () {\n      it('returns 202', async function () {\n        await axios.post('http://' + host + ':' + port + baseAddress + '/transfers', transferRequest, { headers })\n          .then((response: any) => {\n            assert.equal(response.status, 202)\n          }).catch((error: any) => {\n            console.log(error.message)\n            assert.fail()\n          })\n      })\n\n      it('forwards ilpPrepare packet onto connector', async function () {\n\n        httpPlugin.registerDataHandler((data: any) => {\n\n          try {\n            const preparePacket = deserializeIlpPrepare(data)\n            assert.equal(transferRequest.amount.amount, preparePacket.amount)\n            assert.equal(transferRequest.condition, preparePacket.executionCondition.toString('base64'))\n            assert.equal(new Date(transferRequest.expiration), preparePacket.expiresAt)\n            assert.equal(headers['fspiop-final-destination'], preparePacket.destination)\n          } catch (err) {\n            throw new Error(err)\n            // assert.fail('The ilpPrepare packet was not constructed properly')\n          }\n\n          return new Promise(resolve => resolve(data))\n        })\n\n        await axios.post('http://' + host + ':' + port + baseAddress + '/transfers', transferRequest, { headers })\n      })\n\n      it('sends put request once data handler returns', async function () {\n        const putSpy = sinon.stub(axios, 'put')\n        const fulfillment = serializeIlpFulfill({\n          fulfillment: Buffer.from('f5sqb7tBTWPd5Y8BDFdMm9BJR_MNI4isf8p8n4D5pHA', 'base64'),\n          data: Buffer.from(JSON.stringify(headers))\n        } as IlpFulfill)\n\n        httpPlugin.registerDataHandler((data: any) => {\n          return new Promise(resolve => resolve(fulfillment))\n        })\n\n        const response = await axios.post('http://' + host + ':' + port + baseAddress + '/transfers', transferRequest, { headers })\n\n        sinon.assert.calledOnce(putSpy)\n        putSpy.restore()\n      })\n    })\n\n    it('Send Data calls post method', async function() {\n      const postSpy = sinon.stub(axios, 'post')\n      const { amount, expiration, condition, transferId } = transferRequest\n      const ilpMojaData = {\n        requestType: MessageType.transfer,\n        uniqueId: transferId,\n        requestBody: transferRequest,\n        requestHeaders: headers\n      }\n      const ilpPrepare = {\n        amount: amount.amount,\n        expiresAt: new Date(expiration),\n        destination: headers['fspiop-final-destination'] ? headers['fspiop-final-destination'] : headers['fspiop-destination'],\n        data: Buffer.from(JSON.stringify(ilpMojaData)),\n        executionCondition: Buffer.from(condition, 'base64')\n      } as IlpPrepare\n\n      httpPlugin.sendData(serializeIlpPrepare(ilpPrepare))\n\n      sinon.assert.calledOnce(postSpy)\n      const args = postSpy.firstCall.args\n      assert.equal('/transfers', args[0])\n      postSpy.restore()\n    })\n  })\n\n  describe('Quote Requests', function () {\n\n    const quoteRequest = {\n      quoteId: \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n      transactionId: \"a8323bc6-c228-4df2-ae82-e5a997baf899\",\n      transactionRequestId: \"a8323bc6-c228-4df2-ae82-e5a997baf890\",\n      payee:\n        {\n          partyIdInfo:\n            {\n              partyIdType: \"PERSONAL_ID\",\n              partyIdentifier: \"16135551212\",\n              partySubIdOrType: \"DRIVING_LICENSE\",\n              fspId: \"1234\"\n            },\n          merchantClassificationCode: \"4321\",\n          name: \"Justin Trudeau\",\n          personalInfo:\n            {\n              complexName:\n                {\n                  firstName: \"Justin\",\n                  middleName: \"Pierre\",\n                  lastName: \"Trudeau\"\n                },\n              dateOfBirth: \"1971-12-25\"\n            }\n        },\n      payer:\n        {\n          partyIdInfo:\n            {\n              partyIdType: \"PERSONAL_ID\",\n              partyIdentifier: \"16135551212\",\n              partySubIdOrType: \"PASSPORT\",\n              fspId: \"1234\"\n            },\n          merchantClassificationCode: \"1234\",\n          name: \"Donald Trump\",\n          personalInfo:\n            {\n              complexName:\n                {\n                  firstName: \"Donald\",\n                  middleName: \"John\",\n                  lastName: \"Trump\"\n                },\n              dateOfBirth: \"1946-06-14\"\n            }\n        },\n      amountType: \"SEND\",\n      amount:\n        {\n          currency: \"USD\",\n          amount: \"123.45\"\n        },\n      fees:\n        {\n          currency: \"USD\",\n          amount: \"1.25\"\n        },\n      transactionType:\n        {\n          scenario: \"DEPOSIT\",\n          subScenario: \"locally defined sub-scenario\",\n          initiator: \"PAYEE\",\n          initiatorType: \"CONSUMER\",\n          refundInfo:\n            {\n              originalTransactionId: \"b51ec534-ee48-4575-b6a9-ead2955b8069\",\n              refundReason: \"free text indicating reason for the refund\"\n            },\n          balanceOfPayments: \"123\"\n        },\n      geoCode:\n        {\n          latitude: \"+45.4215\",\n          longitude: \"+75.6972\"\n        },\n      note: \"Free-text memo\",\n      expiration: \"2016-05-24T08:38:08.699-04:00\",\n      extensionList:\n        {\n          extension:\n            [\n              {\n                key: \"errorDescription\",\n                value: \"This is a more detailed error description\"\n              },\n              {\n                key: \"errorDescription\",\n                value: \"This is a more detailed error description\"\n              }\n            ]\n        }\n    }\n\n    const quoteHeaders = {\n      'accept': 'application/json',\n      'content-type': 'application/vnd.interoperability.quotes+json;version=1.0',\n      'date': 'Wed, 19 Nov 2018 08:14:01 GMT',\n      'fspiop-source': 'moja.za.blue.zar.green',\n      'fspiop-destination': ' moja.tz.red.tzs.pink',\n      'fspiop-final-destination': ' moja.tz.red.tzs.pink'\n    }\n\n    describe('post /quotes', function () {\n      it('returns 202', async function () {\n        await axios.post('http://' + host + ':' + port + baseAddress + '/quotes', quoteRequest, {headers: quoteHeaders})\n          .then((response: any) => {\n            assert.equal(response.status, 202)\n          }).catch((error: any) => {\n            console.log(error.message)\n            assert.fail()\n          })\n      })\n\n    })\n  })\n})\n"]}